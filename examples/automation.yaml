alias: Publish info on MQTT for Matrix Display
description: ""
triggers:
  - minutes: /5
    id: five_mins
    trigger: time_pattern
  - entity_id:
      - sensor.ical_our_house_event_0
    id: cal_0
    trigger: state
  - entity_id:
      - sensor.ical_our_house_event_1
    id: cal_1
    trigger: state
  - entity_id:
      - sensor.ical_our_house_event_2
    id: cal_2
    trigger: state
  - entity_id:
      - binary_sensor.porch_motion_sensor_iaszone
    id: porch
    enabled: true
    trigger: state
  - entity_id:
      - sensor.go_south_coast_bluestar_1900ha080334
    attribute: summary
    id: hythe_bus
    trigger: state
  - entity_id:
      - sensor.go_south_coast_bluestar_1900ha080333
    attribute: summary
    id: southampton_bus
    trigger: state
  - trigger: state
    entity_id:
      - media_player.living_room_squeezebox
    id: media_player
    from: null
    to: null
  - trigger: state
    entity_id:
      - media_player.living_room_squeezebox
    id: media_player
    enabled: true
    attribute: artist
  - trigger: state
    entity_id:
      - media_player.living_room_squeezebox
    id: media_player
    enabled: true
    attribute: album
  - trigger: state
    entity_id:
      - media_player.living_room_squeezebox
    attribute: media_title
    id: media_player
conditions: []
actions:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - five_mins
        sequence:
          - action: mqtt.publish
            metadata: {}
            data:
              qos: 0
              retain: true
              topic: matrix_display/scroller
              payload: |-
                {{ [
                states('sensor.stock_scroller'),
                states('sensor.weather_scroller'),
                  "Electricity used today: " + states("sensor.today_s_electricity_usage") +
                  " kWh; Electricity cost today: " + states("sensor.today_s_electricity_cost") +
                  " GBP; Solar production today: " + states("sensor.today_s_solar_production") +
                  " kWh; Solar income today: " + states("sensor.today_s_solar_income") +
                  " GBP;"
                ] | to_json }}
          - action: mqtt.publish
            enabled: true
            data:
              qos: 0
              retain: true
              topic: matrix_display/weather
              payload: >
                {% set temperature_sensors = {
                  'Hallway': state_attr('climate.hallway', 'current_temperature') | float(default=0),
                  'Lounge': states('sensor.sonoff_snzb_02d_temperature') | float(default=0),
                  'Kitchen': states('sensor.kitchen_climate_sensor_temperature_2') | float(default=0),
                  'Porch': states('sensor.porch_climate_sensor_temperature') | float(default=0),
                } %}


                {% set inside_temperatures = namespace(list=[]) %}

                {% for k,v in temperature_sensors.items() %}

                {% set new_inside_temperature = {
                  'name': k,
                  'temperature': v,
                } %}

                {% set inside_temperatures.list = inside_temperatures.list +
                [new_inside_temperature] %}

                {% endfor %}

                {% set forecasts = namespace(list=[]) %}

                {% for i in range(3) %}

                {% set old_forecast = state_attr("sensor.weather",
                "forecast")[1+(i*2)] %}

                {% set new_forecast = {
                  'datetime': old_forecast.datetime,
                  'condition': old_forecast.condition,
                  'temperature': old_forecast.temperature|float(0),
                  'precipitation_probability': old_forecast.precipitation_probability|float(0),
                  'wind_speed': old_forecast.wind_speed|float(0),
                  'wind_bearing': old_forecast.wind_bearing|float(0),
                } %}

                {% set forecasts.list = forecasts.list + [new_forecast] %}

                {% endfor %}


                {% set result = {
                  'condition': state_attr('sensor.weather', 'condition'),
                  'precipitation_probability': state_attr('sensor.weather', 'precipitation_probability')|float(0),
                  'temperature': 
                state_attr('sensor.weather', 'temperature')|float(0),
                  'humidity': state_attr('sensor.weather', 'humidity')|float(0),
                  'wind_speed': state_attr('sensor.weather', 'wind_speed')|float(0),
                  'wind_bearing': state_attr('sensor.weather', 'wind_bearing')|float(0),
                  'pressure': float(0),
                  'forecasts': forecasts.list,
                  'inside_temperatures': inside_temperatures.list,
                } %}


                {{ result | to_json }}
      - conditions:
          - condition: trigger
            id:
              - media_player
        sequence:
          - data:
              qos: 0
              retain: false
              topic: living_room_matrix_display/media_player
              payload: |
                {% set result = {
                  'state': states("media_player.living_room_squeezebox"),
                  'artist': state_attr("media_player.living_room_squeezebox", "media_artist"),
                  'album': state_attr("media_player.living_room_squeezebox", "media_album_name"),
                  'title': state_attr("media_player.living_room_squeezebox", "media_title"),
                } %}

                {{ result | to_json }}
            action: mqtt.publish
      - conditions:
          - condition: trigger
            id:
              - cal_0
              - cal_1
              - cal_2
        sequence:
          - data:
              topic: matrix_display/calendar
              payload: |
                {% set result = namespace(list=[]) %}

                {% set cals = [
                  "sensor.ical_our_house_event_0",
                  "sensor.ical_our_house_event_1",
                  "sensor.ical_our_house_event_2",
                ] %}
                {% for cal in cals %}
                  {% set new_cal = {
                    'summary': state_attr(cal, "summary"),
                    'start': state_attr(cal, "start") | string,
                  } %}
                  {% set result.list = result.list + [new_cal] %}
                {% endfor %}

                {{ result.list | to_json }}
              retain: true
              qos: 0
            action: mqtt.publish
      - conditions:
          - condition: trigger
            id:
              - porch
        sequence:
          - data:
              qos: 0
              retain: false
              topic: matrix_display/porch
              payload: |
                {{ states("binary_sensor.porch_motion_sensor_iaszone") }}
            enabled: true
            action: mqtt.publish
      - conditions:
          - condition: trigger
            id:
              - hythe_bus
              - southampton_bus
        sequence:
          - action: mqtt.publish
            metadata: {}
            data:
              qos: 0
              retain: false
              topic: matrix_display/transport
              payload: |-
                {% set result = namespace(list=[]) %}

                {% set result.list = [
                {
                  "Towards": "To: Hythe",
                  "DeparturesSummary": state_attr("sensor.go_south_coast_bluestar_1900ha080334", "summary")
                },
                {
                  "Towards": "To: So'ton",
                  "DeparturesSummary": state_attr("sensor.go_south_coast_bluestar_1900ha080333", "summary")
                }
                ] %}

                {{ result.list | to_json }}
mode: single
